import com.vanniktech.maven.publish.AndroidSingleVariantLibrary

plugins {
    alias libs.plugins.com.android.library
    alias libs.plugins.org.jetbrains.kotlin.android
    alias libs.plugins.org.jetbrains.kotlinx.atomicfu
    alias libs.plugins.org.jetbrains.kotlinx.binary.compatibility.validator
    alias libs.plugins.org.jetbrains.kotlinx.kover
}

apply from: layout.settingsDirectory.file("gradle/publish.gradle")

kotlin {
    explicitApi()

    sourceSets.matching { it.name.endsWith("Test") }.configureEach {
        it.languageSettings {
            optIn('kotlinx.coroutines.DelicateCoroutinesApi')
            optIn('kotlinx.coroutines.InternalCoroutinesApi')
            optIn('kotlinx.coroutines.ExperimentalCoroutinesApi')
        }
    }
}

android {
    namespace = "io.github.ryunen344.mutton.savedstate"
    compileSdk = 35
    defaultConfig {
        minSdk = 19
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled = true
        consumerProguardFile "consumer-rules.pro"
    }
    buildTypes {
        release {
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions.jvmTarget = "1.8"
    packaging.resources.excludes += "/META-INF/{AL2.0,LGPL2.1}"
    lint {
        checkReleaseBuilds = false
        sarifReport = true
    }
    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
        unitTests.all { test ->
            test.systemProperty("robolectric.logging", "stdout")
            test.systemProperty("robolectric.logging.enabled", "true")
            test.systemProperty("robolectric.graphicsMode", "NATIVE")
            test.testLogging.showStandardStreams = true
        }
    }
}

androidComponents {
    beforeVariants(selector().withName("release")) { variantBuilder ->
        variantBuilder.enableAndroidTest = false
        variantBuilder.enableUnitTest = false
        variantBuilder.enableTestFixtures = false
    }
}

dependencies {
    implementation project(":auto-mutton-recipe")
    implementation libs.androidx.lifecycle.viewmodel.savedstate
    testImplementation libs.androidx.test.core
    testImplementation libs.androidx.test.ext.junit
    testImplementation libs.androidx.test.rules
    testImplementation libs.androidx.test.runner
    testImplementation libs.app.cash.turbine
    testImplementation libs.com.willowtreeapps.assertk
    testImplementation libs.org.jetbrains.kotlin.test
    testImplementation libs.org.jetbrains.kotlin.reflect
    testImplementation libs.org.jetbrains.kotlinx.coroutine.test
    testImplementation libs.org.robolectric.robolectric
}

// configure dokka html-docs.jar as javadoc.jar
mavenPublishing {
    configure(new AndroidSingleVariantLibrary("release", true, false))
}

tasks.register('dokkaHtmlJar', Jar) {
    dependsOn(dokkaHtml)
    from(dokkaHtml)
    archiveClassifier.set("javadoc")
}

publishing {
    publications.configureEach {
        it.artifact dokkaHtmlJar
    }
}
